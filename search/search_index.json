{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Streamer Setup Development To write code and generate the documentation you need to install the packages listed in requirements.txt with pip pip3 install -r requirements.txt PYTHONPATH To use the 4DGame SDK you have do add the lib folder to your PYTHONPATH variable. Additionally add the src folder to your PYTHONPATH for nicer imports and automatic documentation. export PYTHONPATH = \" $( pwd ) /src: $( pwd ) /lib\" Documentation The Documentation is generated with the help of mkdocstrings . To implement a module, class or function into your documentation you have to reference it as follows: ::: library.module ::: library.module.class ::: library.module.function On Device For the usage on Device the packages listed in requirements.txt should be installed: pip install -r requirements.txt Next setup the controller service with scripts/systemd-setup","title":"Setup"},{"location":"#streamer-setup","text":"","title":"Streamer Setup"},{"location":"#development","text":"To write code and generate the documentation you need to install the packages listed in requirements.txt with pip pip3 install -r requirements.txt","title":"Development"},{"location":"#pythonpath","text":"To use the 4DGame SDK you have do add the lib folder to your PYTHONPATH variable. Additionally add the src folder to your PYTHONPATH for nicer imports and automatic documentation. export PYTHONPATH = \" $( pwd ) /src: $( pwd ) /lib\"","title":"PYTHONPATH"},{"location":"#documentation","text":"The Documentation is generated with the help of mkdocstrings . To implement a module, class or function into your documentation you have to reference it as follows: ::: library.module ::: library.module.class ::: library.module.function","title":"Documentation"},{"location":"#on-device","text":"For the usage on Device the packages listed in requirements.txt should be installed: pip install -r requirements.txt Next setup the controller service with scripts/systemd-setup","title":"On Device"},{"location":"sdk/","text":"Game SDK for Controller Structure Controls classDiagram class Input~abc.ABC~{ +__init__(int seat, str name) +reset(int seat) +getName() } class Joystick{ +JoystickCode joystick_pos +__init__(int seat, str name, JoystickCode joystick_pos) +get_direction(int x, int y) } Joystick --|> Input class JoystickCode~enum.Enum~{ LEFT_Y = 0 LEFT_X = 1 RIGHT_Y = 2 RIGHT_X = 3 } Joystick ..> JoystickCode Switch --|> Input class Switch{ +KeyCode key_bind +__init__(int seat, str name, KeyCode key_bind) +on(int seat) +off(ind seat) } class KeyCode~enum.Enum~{ BUT_0 = 0 BUT_1 = 1 BUT_2 = 2 BUT_3 = 3 DPAD_X = 4 DPAD_Y = 5 L1 = 6 L2 = 7 R1 = 8 R2 = 9 } Switch ..> KeyCode class GamePad { +dict key_map +dict joystick_map +KeyCode mapKey(int key_code) } GamePad ..> KeyCode GamePad ..> JoystickCode class XBox { } XBox --|> GamePad Game classDiagram class Game{ +list controls +dict config +on_init() +on_start() +on_end() +run(str conf_path, int log_level) } MQTT Communication","title":"Structure"},{"location":"sdk/#game-sdk-for-controller","text":"","title":"Game SDK for Controller"},{"location":"sdk/#structure","text":"","title":"Structure"},{"location":"sdk/#controls","text":"classDiagram class Input~abc.ABC~{ +__init__(int seat, str name) +reset(int seat) +getName() } class Joystick{ +JoystickCode joystick_pos +__init__(int seat, str name, JoystickCode joystick_pos) +get_direction(int x, int y) } Joystick --|> Input class JoystickCode~enum.Enum~{ LEFT_Y = 0 LEFT_X = 1 RIGHT_Y = 2 RIGHT_X = 3 } Joystick ..> JoystickCode Switch --|> Input class Switch{ +KeyCode key_bind +__init__(int seat, str name, KeyCode key_bind) +on(int seat) +off(ind seat) } class KeyCode~enum.Enum~{ BUT_0 = 0 BUT_1 = 1 BUT_2 = 2 BUT_3 = 3 DPAD_X = 4 DPAD_Y = 5 L1 = 6 L2 = 7 R1 = 8 R2 = 9 } Switch ..> KeyCode class GamePad { +dict key_map +dict joystick_map +KeyCode mapKey(int key_code) } GamePad ..> KeyCode GamePad ..> JoystickCode class XBox { } XBox --|> GamePad","title":"Controls"},{"location":"sdk/#game","text":"classDiagram class Game{ +list controls +dict config +on_init() +on_start() +on_end() +run(str conf_path, int log_level) }","title":"Game"},{"location":"sdk/#mqtt-communication","text":"","title":"MQTT Communication"},{"location":"sdk/key-maps/","text":"Key Maps XBox: XBox Key Code 4DGame SDK Code A 304 BUT_0 B 305 BUT_1 X 307 BUT_2 Y 308 BUT_3 D-PAD X 16 DPAD_X D-PAD Y 17 DPAD_Y L1 310 L1 L2 10 L2 R1 311 R1 R2 9 R2 XBox Joystick Dimension Code 4DGame SDK Code LEFT_X 0 LEFT_X LEFT_Y 1 LEFT_Y RIGHT_X 2 RIGHT_X RIGHT_Y 5 RIGHT_Y","title":"Key Maps"},{"location":"sdk/key-maps/#key-maps","text":"","title":"Key Maps"},{"location":"sdk/key-maps/#xbox","text":"XBox Key Code 4DGame SDK Code A 304 BUT_0 B 305 BUT_1 X 307 BUT_2 Y 308 BUT_3 D-PAD X 16 DPAD_X D-PAD Y 17 DPAD_Y L1 310 L1 L2 10 L2 R1 311 R1 R2 9 R2 XBox Joystick Dimension Code 4DGame SDK Code LEFT_X 0 LEFT_X LEFT_Y 1 LEFT_Y RIGHT_X 2 RIGHT_X RIGHT_Y 5 RIGHT_Y","title":"XBox:"}]}